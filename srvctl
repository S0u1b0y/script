#!/bin/bash

###############################################################################
########################### Определение переменных ############################
###############################################################################

PACKAGE_VERSION='0.1.3'
RUNITSERVICES='/run/runit/service' # VoidLinux: /var/service
RUNITSV='/etc/runit/sv' #RUNITSV='../../sv' # VoidLinux: /etc/sv
S6PATH="/etc/s6/adminsv/default/contents.d"
if [ -f /bin/dinit ]; then INITSYS=dinit; fi
if [ -f /bin/runit ]; then INITSYS=runit; fi
if [ -f /bin/openrc ]; then INITSYS=openrc; fi
if [ -f /bin/s6-rc ]; then INITSYS=s6; fi

###############################################################################
########################### Вспомогательные функции ###########################
###############################################################################

# Справочная информация:
function usage
{
    echo
    echo "Управление сервисами (службами, демонами) для разных систем инициализации."
    echo "На данный момент поддерживаются: runit, openrc, s6, dinit"
    echo
    echo "Синтаксис:"
    echo "    srvctl ключ сервис_1 [сервис_2 [сервис_3 [сервис_N]]]"
    echo
    echo "Ключи:"
    echo "    -h, --help                          Помощь"
    echo "    -v, --version                       Версия скрипта"
    echo "    -a, --add, --enable                 Добавление сервисов"
    echo "    -u, --up, --start                   Запуск сервисов"
    echo "    -e, --execute, -au, -ua, --addup    Добавление и запуск сервисов"
    echo "    -r, --restart                       Рестарт сервисов"
    echo "    -d, --down, --stop                  Остановка сервисов"
    echo "    -t, --delete, --disable             Удаление сервисов"
    echo "    -k, --kill, -dt, -td, --stopdel     Остановка и удаление сервисов"
    echo "    -i, --info                          Информация о сервисе"
    echo "    -l, --list                          Список активных сервисов"
    echo
    exit 0
}

function version
{
    echo
	echo "srvctl (SeRVice ConTroL) $PACKAGE_VERSION"
	echo "Copyright (c) 2023 Denis Kruglov"
	echo
	echo "This is free software, see the source for copying conditions."
	echo "There is NO WARRANTY, to the extent permitted by law."
    echo
	exit 0
}

###############################################################################
############################## Разбор аргументов ##############################
###############################################################################

# Разбор аргументов переданных скрипту:
iKEY=0; iSRV=0; KEYS=(); SRVS=()
for ARG in $@; do
    if [[ $ARG =~ ^(-|--)[a-z]+ ]]
        then KEYS[$iKEY]=$ARG && ((iKEY++)) # Если ключ, записываем в массив KEYS
        else SRVS[$iSRV]=$ARG && ((iSRV++)) # Если служба, записываем в массив SRVC
    fi
done
SERVICES=${SRVS[*]}
KEY=${KEYS[*]}

###############################################################################
######################### Обработка отладочных ключей #########################
###############################################################################

# С ключом -x или --echo не выполнять, а вывести список выполняемых команд:
if [[ ${KEYS[*]} =~ .*(-x|--echo).* ]]; then
    echo -e "\nАргументы переданные в скрипт:"
    echo -e "Ключи (${#KEYS[*]} шт.): ${KEYS[*]}" # Переданные ключи
    echo -e "Список сервисов: $SERVICES\n" # Переданные сервисы
    echo -e "Выполняемые команды:"
    ECHOKEY='echo'
    # Проверка команд на разных системах инициализации:
    [[ ${KEYS[*]} == *:dinit ]] && INITSYS=dinit && KEYS=${KEYS[*]/':dinit'}
    [[ ${KEYS[*]} == *:runit ]] && INITSYS=runit && KEYS=${KEYS[*]/':runit'}
    [[ ${KEYS[*]} == *:openrc ]] && INITSYS=openrc && KEYS=${KEYS[*]/':openrc'}
    [[ ${KEYS[*]} == *:s6 ]] && INITSYS=s6 && KEYS=${KEYS[*]/':s6'}
    # Очищаем массив KEYS от отладочных ключей:
    KEYS=${KEYS[*]/'-x'}; KEYS=${KEYS[*]/'--echo'}
    # Массив записываем в переменную:
    KEY=${KEYS[*]}
fi

# echo ${PATH//:/ }
# Пример проверки...
# srvctl --addup cupsd sshd ntpd ufw --echo:runit
# srvctl --kill cupsd sshd ntpd ufw --echo:openrc

###############################################################################
############################### Проверка ключей ###############################
###############################################################################

HELPNOTE="Для получения справки используйте: srvctl -h или srvctl --help"
ERRCOMBOKEY="Ошибка: Недопустимое сочетание ключей"
ERRNOKEY="Ошибка: Не задан ключ"
ERRUNDEFKEY="Ошибка: Неопознанный ключ"

# Если ключей больше одного -> ОШИБКА:
[ ${#KEYS[*]} > 1 ] && echo -e "$ERRCOMBOKEY\n$HELPNOTE" && exit 1
# Если нет ключей -> ОШИБКА:
[ ${#KEYS[*]} = 0 ] && echo -e "$ERRNOKEY\n$HELPNOTE" && exit 1

# Проверяем правильные ли ключи:
case $KEY in
    -h|--help|-v|--version|-i|--info|-l|--list|-r|--restart) ;;
    -a|--add|--enable|-u|--up|--start|-e|--execute|-au|-ua|--addup) ;;
    -d|--down|--stop|-t|--delete|--disable|-k|--kill|-dp|-pd|--stopdel) ;;
    *) echo -e "$ERRUNDEFKEY\n$HELPNOTE" && exit 1 ;; # Если неправильный ключ -> ОШИБКА
esac

###############################################################################
############################## Обработка ключей ###############################
###############################################################################

# Выводим справочную информацию:
if [[ $KEY =~ ^(-h|--help)$ ]]; then usage; fi

# Выводим информацию о версии скрипта:
if [[ $KEY =~ ^(-v|--version)$ ]]; then version; fi

# Добавление сервисов для автозапуска при старте системы:
if [[ $KEY =~ ^(-a|--add|--enable|-e|--execute|-au|-ua|--addup)$ ]]; then
    for SERVICE in $SERVICES; do
        case $INITSYS in
            dinit )   $ECHOKEY dinitctl enable $SERVICE ;;
            runit )   $ECHOKEY ln -s $RUNITSV/$SERVICE $RUNITSERVICES ;;
            openrc )  $ECHOKEY rc-update add $SERVICE default ;;
            s6 )      $ECHOKEY touch $S6PATH/$SERVICE ;;
        esac
    done
    if [ $INITSYS = s6 ]; then $ECHOKEY s6-db-reload; fi
fi

# Запуск сервисов:
if [[ $KEY =~ ^(-u|--up|--start|-e|--execute|-au|-ua|--addup)$ ]]; then
    for SERVICE in $SERVICES; do
        case $INITSYS in
            dinit )   $ECHOKEY dinitctl start $SERVICE ;;
            runit )   $ECHOKEY sv start $SERVICE ;;
            openrc )  $ECHOKEY rc-service $SERVICE start ;;
            s6 )      $ECHOKEY s6-rc -u change $SERVICE ;;
        esac
    done
    if [ $INITSYS = s6 ]; then $ECHOKEY s6-db-reload; fi
fi

# Рестарт сервисов:
if [[ $KEY =~ ^(-r|--restart)$ ]]; then
    for SERVICE in $SERVICES; do
        case $INITSYS in
            dinit )   $ECHOKEY dinitctl restart $SERVICE ;;
            runit )   $ECHOKEY sv restart $SERVICE ;;
            openrc )  $ECHOKEY rc-service $SERVICE restart ;;
            s6 )      $ECHOKEY s6-svc -r /run/service/$SERVICE ;;
        esac
    done
fi

# Остановка сервисов:
if [[ $KEY =~ ^(-d|--down|--stop|-k|--kill|-dt|-td|--stopdel)$ ]]; then
    for SERVICE in $SERVICES; do
        case $INITSYS in
            dinit )   $ECHOKEY dinitctl stop $SERVICE ;;
            runit )   $ECHOKEY sv stop $SERVICE ;;
            openrc )  $ECHOKEY rc-service $SERVICE stop ;;
            s6 )      $ECHOKEY s6-rc -d change $SERVICE ;;
        esac
    done
    if [ $INITSYS = s6 ]; then $ECHOKEY s6-db-reload; fi
fi

# Удаление сервисов:
if [[ $KEY =~ ^(-t|--delete|--disable|-k|--kill|-dt|-td|--stopdel)$ ]]; then
    for SERVICE in $SERVICES; do
        case $INITSYS in
            dinit )   $ECHOKEY dinitctl disable $SERVICE ;;
            runit )   $ECHOKEY unlink $RUNITSERVICES/$SERVICE ;;
            openrc )  $ECHOKEY rc-update del $SERVICE ;;
            s6 )      $ECHOKEY rm -rf $S6PATH/$SERVICE ;;
        esac
    done
    if [ $INITSYS = s6 ]; then $ECHOKEY s6-db-reload; fi
fi

# Информация о сервисе:
if [[ $KEY =~ ^(-i|--info)$ ]]; then
    case $INITSYS in
        dinit )   $ECHOKEY dinitctl status ${SRVS[0]} ;;
        runit )   $ECHOKEY sv status ${SRVS[0]} ;;
        openrc )  $ECHOKEY rc-service ${SRVS[0]} status ;;
        s6 )      $ECHOKEY s6-svstat /run/service/${SRVS[0]} ;;
    esac
fi

# Список активных сервисов:
if [[ $KEY =~ ^(-l|--list)$ ]]; then
    case $INITSYS in
        dinit )   $ECHOKEY dinitctl list ;;
        runit )   $ECHOKEY ls --color -lA $RUNITSERVICES/* ;;
        openrc )  $ECHOKEY rc-update show -v ;;
        s6 )      $ECHOKEY s6-rc -a list ;;
    esac
fi

###############################################################################
############################## Окончание отладки ##############################
###############################################################################

if [[ $ECHOKEY == echo ]]; then
    echo -e "\nАргументы на выходе из скрипта:"
    echo -e "Ключи (${#KEYS[*]} шт.): ${KEYS[*]}\n" # Обработанные ключи
fi

###############################################################################
#################################### Выход ####################################
###############################################################################

exit 0
